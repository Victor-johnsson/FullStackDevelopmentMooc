{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Victo\\\\Documents\\\\Node\\\\FullStackMooc\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const valueArray = [good, neutral, bad];\n\n  const setGoodValue = newValue => {\n    newValue = good + 1;\n    setGood(newValue);\n  };\n\n  const setNeutralValue = newValue => {\n    newValue = neutral + 1;\n    setNeutral(newValue);\n  };\n\n  const setBadValue = newValue => {\n    newValue = bad + 1;\n    setBad(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: \"Good\",\n      handleClick: setGoodValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: \"Neutral\",\n      handleClick: setNeutralValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: \"Bad\",\n      handleClick: setBadValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      values: valueArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c = App;\n\nconst Header = () => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"give feedback\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = Header;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.name\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 3\n}, this);\n\n_c3 = Button;\n\nconst Statistics = props => {\n  const array = props.values;\n  const good = array[0];\n  const bad = array[2];\n  const neutral = array[1];\n  var all = good + bad + neutral;\n  const average = (good - bad) / all;\n  const positive = good / all * 100;\n\n  if (all > 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n            name: \"Good\",\n            value: good\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n            name: \"Neutral\",\n            value: neutral\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n            name: \"Bad\",\n            value: bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n            name: \"All\",\n            value: all\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n            name: \"Average\",\n            value: average\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n            name: \"positive\",\n            value: positive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_c4 = Statistics;\n\nconst StatisticLine = _ref => {\n  let {\n    name,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c5 = StatisticLine;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"Statistics\");\n$RefreshReg$(_c5, \"StatisticLine\");","map":{"version":3,"names":["useState","App","good","setGood","neutral","setNeutral","bad","setBad","valueArray","setGoodValue","newValue","setNeutralValue","setBadValue","Header","Button","props","handleClick","name","Statistics","array","values","all","average","positive","StatisticLine","value"],"sources":["C:/Users/Victo/Documents/Node/FullStackMooc/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst App = () => {\r\n  // save clicks of each button to its own state\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n  const valueArray = [good, neutral, bad];\r\n\r\n  const setGoodValue = (newValue) => {\r\n    newValue = good + 1;\r\n    setGood(newValue);\r\n  };\r\n\r\n  const setNeutralValue = (newValue) => {\r\n    newValue = neutral + 1;\r\n    setNeutral(newValue);\r\n  };\r\n  const setBadValue = (newValue) => {\r\n    newValue = bad + 1;\r\n    setBad(newValue);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Button name=\"Good\" handleClick={setGoodValue} />\r\n      <Button name=\"Neutral\" handleClick={setNeutralValue} />\r\n      <Button name=\"Bad\" handleClick={setBadValue} />\r\n      <Statistics values={valueArray} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Header = () => {\r\n  return <h1>give feedback</h1>;\r\n};\r\n\r\nconst Button = (props) => (\r\n  <button onClick={props.handleClick}>{props.name}</button>\r\n);\r\n\r\nconst Statistics = (props) => {\r\n  const array = props.values;\r\n  const good = array[0];\r\n  const bad = array[2];\r\n  const neutral = array[1];\r\n  var all = good + bad + neutral;\r\n\r\n  const average = (good - bad) / all;\r\n\r\n  const positive = (good / all) * 100;\r\n\r\n  if (all > 0) {\r\n    return (\r\n      <>\r\n        <h1>statistics</h1>\r\n        <table>\r\n          <tbody>\r\n            <StatisticLine name=\"Good\" value={good} />\r\n            <StatisticLine name=\"Neutral\" value={neutral} />\r\n            <StatisticLine name=\"Bad\" value={bad} />\r\n            <StatisticLine name=\"All\" value={all} />\r\n            <StatisticLine name=\"Average\" value={average} />\r\n            <StatisticLine name=\"positive\" value={positive} />\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <h1>statistics</h1>\r\n        <p>No feedback given</p>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nconst StatisticLine = ({ name, value }) => {\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>{name}</td>\r\n        <td>{value}</td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}